<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Location Finder</title>
    <link rel="stylesheet" href="/css/style.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.9.4/leaflet.min.css" integrity="sha512-h9FcoyWjHcOcmEVkxOfTLnmZFWIH0iZhZT1H2TbOq55xssQGEJHEaIm+PgoUaZbRvQTNTluNOEfb1ZRy6D3BOw==" crossorigin="anonymous" referrerpolicy="no-referrer" />
</head>
<body>
    <h1>Find Your Current Location</h1>

    <button id="use-location">Use my current location</button><br><br>

    <div id="map" style="height: 500px;"></div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.9.4/leaflet.js" integrity="sha512-BwHfrr4c9kmRkLw6iXFdzcdWV/PGkVgiIyIWLLlTSXzWQzxuSg4DiQUCpauz/EWjgk5TYQqX/kvn9pG1NpYfqg==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    <script src="https://cdn.socket.io/4.7.5/socket.io.min.js" integrity="sha384-2huaZvOR9iDzHqslqwpR87isEmrfxqyWOF7hr7BY6KG0+hVKLoEXMPUJw3ynWuhO" crossorigin="anonymous"></script>
    <script>
        let socket = io();
        let map;
        let marker;

        // Initialize map centered at a default location
        function initializeMap(lat = 0, lon = 0, zoomLevel = 2) {
            map = L.map("map").setView([lat, lon], zoomLevel);

            L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png", {
                attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors',
            }).addTo(map);
        }

        // Call initializeMap to create an empty map
        initializeMap();

        document.getElementById("use-location").addEventListener("click", () => {
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(
                    (position) => {
                        const { latitude, longitude } = position.coords;
                        
                        // If marker exists, remove it
                        if (marker) {
                            map.removeLayer(marker);
                        }

                        // Center map on the user's current location
                        map.setView([latitude, longitude], 16);

                        // Add a marker at the current location
                        marker = L.marker([latitude, longitude]).addTo(map);

                        // Send the location to other users via socket
                        socket.emit("send-location", { latitude, longitude });

                        alert("Your current location is displayed on the map.");
                    },
                    (error) => {
                        alert("Error retrieving your location.");
                        console.error("Geolocation error:", error);
                    },
                    {
                        enableHighAccuracy: true,
                        timeout: 5000,
                        maximumAge: 0,
                    }
                );
            } else {
                alert("Geolocation is not supported by this browser.");
            }
        });

        socket.on("receive-location", (data) => {
            const { id, latitude, longitude } = data;
            console.log(`Received Location - ID: ${id}, Latitude: ${latitude}, Longitude: ${longitude}`);

            // Optionally, show other users' locations on the map (if needed)
        });

        socket.on("user-disconnected", (id) => {
            console.log(`User with ID ${id} disconnected`);
        });
    </script>
</body>
</html>
